{"version":3,"sources":["components/chartCreator.js","helper/randomNumber.js","components/linearSearch.js","pages/App.js","index.js"],"names":["getHorizontalPosition","amount","position","getHeight","value","BarCreator","props","useState","numbers","setNumbers","useEffect","className","width","height","aria-labelledby","role","Object","values","map","item","key","fill","selected","found","y","x","attributeName","from","to","dur","generateRandomNumbers","a","numberArray","Array","keys","forEach","j","Math","floor","random","tempNumbers","LinearSearch","then","type","onClick","doLinearSearch","startIndex","target","backup","setTimeout","App","setGlobal","ReactDOM","render","document","getElementById"],"mappings":"6RAEMA,EAAwB,SAACC,EAAQC,GACrC,OAAOA,GAAY,IAAMD,IAOrBE,EAAY,SAACC,EAAOH,GACxB,OAAQG,EAAQH,EAAU,IAAM,KAmDnBI,EAhDI,SAAAC,GAAU,IAAD,EACIC,mBAAS,IADb,mBACnBC,EADmB,KACVC,EADU,KAO1B,OAJAC,qBAAU,WACRD,EAAWH,EAAME,WAChB,CAACF,EAAME,UAGR,yBACEG,UAAU,QACVC,MAAM,OACNC,OAAO,MACPC,kBAAgB,aAChBC,KAAK,OAEJP,EACGQ,OAAOC,OAAOT,GAASU,KAAI,SAACC,EAAMC,GAChC,OACE,uBAAGT,UAAU,MAAMS,IAAKA,GACtB,0BACER,OA5BDX,EA4BiBK,EAAML,OA3B9B,EAAIA,EAAU,IAAM,KA4BZY,OAAQV,EAAUgB,EAAKf,MAAOE,EAAML,QACpCoB,KACEF,EAAKG,SACDH,EAAKI,MACH,UACA,UACF,UAENC,EAAE,KACFC,EAAGzB,EAAsBM,EAAML,OAAQmB,GAAO,KAE9C,6BACEM,cAAc,SACdC,KAAK,IACLC,GAAIzB,EAAUgB,EAAKf,MAAOE,EAAML,QAChC4B,IAAI,OACJR,KAAK,aA7CR,IAAApB,KAmDP,O,0lBCzDH,IAAM6B,EAAqB,uCAAG,WAAM7B,GAAN,iBAAA8B,EAAA,6DAC/BC,EAD+B,YACbC,MAAMhC,GAAQiC,SAExBC,SAAQ,SAACf,EAAKhB,GACxB,IAAMgC,EAAIC,KAAKC,MAAMD,KAAKE,SAAWnB,GACrCY,EAAYZ,GAAOY,EAAYI,GAC/BJ,EAAYI,GAAKhC,KAGfoC,EAAc,GAElBR,EAAYG,SAAQ,SAACf,EAAKhB,GACxBoC,EAAW,KACNA,EADM,eAERpB,EAAM,CAAEhB,MAAOA,EAAOkB,UAAU,EAAOC,OAAO,QAdhB,kBAkB5BiB,GAlB4B,2CAAH,sD,yjBCIlC,IAgFeC,EA9EM,SAAAnC,GACnB,IAD4B,EA0BEC,mBAAS,IA1BX,mBA0BrBC,EA1BqB,KA0BZC,EA1BY,KAgC5B,OAJAC,qBAAU,WACRoB,EA/BS,KA+BqBY,MAAK,SAAAlC,GAAO,OAAIC,EAAWD,QACxD,IAGD,yBAAKG,UAAU,OACb,kBAAC,EAAD,CAAYV,OApCL,IAoCqBO,QAASA,IACrC,6BACE,6CACA,yBAAKG,UAAU,QACb,ybASA,2BACE,oCACA,4BACE,sDACA,0EAGJ,2BACE,oCACA,4BACE,4DAKR,2BACEP,MAAM,oBACNuC,KAAK,SACLC,QAAS,kBAhEQ,SAAjBC,EAAkBC,EAAYC,EAAQC,GAC1CC,YAAW,WACLzC,EAAQsC,GAAY1C,QAAU2C,GAWhCtC,EAAW,KACNuC,EADK,eAEPF,EAAa,CACZ1C,MAAOI,EAAQsC,GAAY1C,MAC3BkB,UAAU,EACVC,OAAO,MAGXsB,EAAeC,EAAa,EAAGC,EAAQC,IAlBvCvC,EAAW,KACNuC,EADK,eAEPF,EAAa,CACZ1C,MAAOI,EAAQsC,GAAY1C,MAC3BkB,UAAU,EACVC,OAAO,QAeZ,KAyCgBsB,CAAe,EAAG,EAAGrC,MAEtC,2BACEJ,MAAM,mBACNuC,KAAK,SACLC,QAAS,kBACPd,EAzEG,KAyE2BY,MAAK,SAAAlC,GAAO,OAAIC,EAAWD,WCjEpD0C,EARH,WACV,OACE,yBAAKvC,UAAU,OACb,kBAAC,EAAD,Q,MCDNwC,oBAAU,CACR3C,QAAS,KAGX4C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e63ee4f9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst getHorizontalPosition = (amount, position) => {\n  return position * (100 / amount);\n};\n\nconst getWidth = amount => {\n  return (1 / amount) * 100 + \"%\";\n};\n\nconst getHeight = (value, amount) => {\n  return (value / amount) * 100 + \"%\";\n};\n\nconst BarCreator = props => {\n  const [numbers, setNumbers] = useState([]);\n\n  useEffect(() => {\n    setNumbers(props.numbers);\n  }, [props.numbers]);\n\n  return (\n    <svg\n      className=\"chart\"\n      width=\"100%\"\n      height=\"20%\"\n      aria-labelledby=\"title desc\"\n      role=\"img\"\n    >\n      {numbers\n        ? Object.values(numbers).map((item, key) => {\n            return (\n              <g className=\"bar\" key={key}>\n                <rect\n                  width={getWidth(props.amount)}\n                  height={getHeight(item.value, props.amount)}\n                  fill={\n                    item.selected\n                      ? item.found\n                        ? \"#4d8621\"\n                        : \"#625b1a\"\n                      : \"#303d6c\"\n                  }\n                  y=\"0%\"\n                  x={getHorizontalPosition(props.amount, key) + \"%\"}\n                >\n                  <animate\n                    attributeName=\"height\"\n                    from=\"0\"\n                    to={getHeight(item.value, props.amount)}\n                    dur=\"0.5s\"\n                    fill=\"freeze\"\n                  />\n                </rect>\n              </g>\n            );\n          })\n        : null}\n    </svg>\n  );\n};\n\nexport default BarCreator;\n","export const generateRandomNumbers = async amount => {\n  let numberArray = [...Array(amount).keys()];\n\n  numberArray.forEach((key, value) => {\n    const j = Math.floor(Math.random() * key);\n    numberArray[key] = numberArray[j];\n    numberArray[j] = value;\n  });\n\n  let tempNumbers = {};\n\n  numberArray.forEach((key, value) => {\n    tempNumbers = {\n      ...tempNumbers,\n      [key]: { value: value, selected: false, found: false }\n    };\n  });\n\n  return tempNumbers;\n};\n","import React, { useState, useEffect } from \"react\";\nimport BarCreator from \"../components/chartCreator\";\nimport { generateRandomNumbers } from \"../helper/randomNumber\";\n\nlet amount = 100;\n\nconst LinearSearch = props => {\n  const doLinearSearch = (startIndex, target, backup) => {\n    setTimeout(() => {\n      if (numbers[startIndex].value === target) {\n        setNumbers({\n          ...backup,\n          [startIndex]: {\n            value: numbers[startIndex].value,\n            selected: true,\n            found: true\n          }\n        });\n        return;\n      } else {\n        setNumbers({\n          ...backup,\n          [startIndex]: {\n            value: numbers[startIndex].value,\n            selected: true,\n            found: false\n          }\n        });\n        doLinearSearch(startIndex + 1, target, backup);\n      }\n    }, 100);\n  };\n  const [numbers, setNumbers] = useState({});\n\n  useEffect(() => {\n    generateRandomNumbers(amount).then(numbers => setNumbers(numbers));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <BarCreator amount={amount} numbers={numbers} />\n      <div>\n        <h2>Linear Search</h2>\n        <div className=\"text\">\n          <p>\n            Linear Search is one of the slowest if not the slowest search\n            algorithm. Each item in an unsorted array is passed sequentally and\n            checked against the target value. The time complexity of the\n            algorithm is therefore O(n). Linear search is rarely used\n            practically because other search algorithms such as the binary\n            search algorithm and hash tables allow significantly faster\n            searching comparison to Linear search.\n          </p>\n          <p>\n            <b>Pros:</b>\n            <ul>\n              <li>Very easy to implement</li>\n              <li>No sorting is necessary prior searching </li>\n            </ul>\n          </p>\n          <p>\n            <b>Cons:</b>\n            <ul>\n              <li>Bad time complexity O(n)</li>\n            </ul>\n          </p>\n        </div>\n      </div>\n      <input\n        value=\"Find the number 4\"\n        type=\"button\"\n        onClick={() => doLinearSearch(0, 4, numbers)}\n      />\n      <input\n        value=\"Shuffle Numbers!\"\n        type=\"button\"\n        onClick={() =>\n          generateRandomNumbers(amount).then(numbers => setNumbers(numbers))\n        }\n      />\n    </div>\n  );\n};\n\nexport default LinearSearch;\n","import React from \"reactn\";\nimport \"../style/App.css\";\nimport LinearSearch from \"../components/linearSearch\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <LinearSearch />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./pages/App\";\nimport \"./style/index.css\";\nimport { setGlobal } from \"reactn\";\n\nsetGlobal({\n  numbers: {}\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}